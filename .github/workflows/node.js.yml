# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [dev, issue-83-fix-uploadtesttsx]
  pull_request:
    branches: [dev, issue-83-fix-uploadtesttsx]

jobs:

  install:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    strategy:
      matrix:
        node-version: [14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v2

      # caches the node environment with type 'yarn'
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          #cache: "yarn"
          #cache-dependency-path: frontend/yarn.lock

      # caches the node_modules folder
      #- uses: actions/cache@v2
      #  id: node-modules-cache
      #  with:
      #    path: "**/node_modules"
      #    key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install #if: steps.node-modules-cache.outputs.cache-hit != 'true'

  build:
    needs: install
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    strategy:
      matrix:
        node-version: [14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v2
      
      # caches the node environment with type 'yarn'
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
          cache-dependency-path: frontend/yarn.lock

      #- uses: actions/cache@v2
      #  id: node-modules-cache
      #  with:
      #    path: "**/node_modules"
      #    key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install #if: steps.node-modules-cache.outputs.cache-hit != 'true'

      # caches the build folder
      #- uses: actions/cache@v2
      #  id: build-cache
      #  with:
      #    path: "**/build"
      #    key: ${{ runner.os }}-modules-${{ hashFiles('**/static') }}

      - name: Build dependencies
        run: yarn build --if-present #if: steps.build-cache.outputs.cache-hit != 'true'

  test:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    strategy:
      matrix:
        node-version: [14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v2
      
      # caches the node environment with type 'yarn'
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
          cache-dependency-path: frontend/yarn.lock

      #- uses: actions/cache@v2
      #  id: node-modules-cache
      #  with:
      #    path: "**/node_modules"
      #    key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install #if: steps.node-modules-cache.outputs.cache-hit != 'true'

      #- uses: actions/cache@v2
      #  id: build-cache
      #  with:
      #    path: "**/build"
      #    key: ${{ runner.os }}-modules-${{ hashFiles('**/static') }}

      - name: Build dependencies
        run: yarn build --if-present #if: steps.build-cache.outputs.cache-hit != 'true'

      - run: yarn test:ci
      
      - name: Upload Sonar Test Results Frontend
        uses: actions/upload-artifact@v2
        with:
          name: sonar-report-frontend
          path: ${{ github.workspace }}/frontend/sonar-report.xml
          
      - name: Upload Sonar Test Coverage Frontend
        uses: actions/upload-artifact@v2
        with:
          name: sonar-coverage-frontend
          path: ${{ github.workspace }}/frontend/coverage/lcov.info

  sonarqube:
    needs: test
    name: SonarQube Scan
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
        
    - name: Download Sonar Test Results Frontend
      uses: actions/download-artifact@v2
      with:
        name: sonar-report-frontend
        path: ${{ github.workspace }}/frontend
        
    - name: Download Sonar Test Coverage Frontend
      uses: actions/download-artifact@v2
      with:
        name: sonar-coverage-frontend
        path: ${{ github.workspace }}/frontend/coverage
        
    - name: fix code coverage paths
      working-directory: ./frontend
      run: |
        sed -i 's/\/home\/runner\/work\/ddueruem-web\/ddueruem-web\//\/github\/workspace\//g' coverage/lcov.info
        sed -i 's/\/home\/runner\/work\/ddueruem-web\/ddueruem-web\//\/github\/workspace\//g' sonar-report.xml
        
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      with:
        projectBaseDir: "./frontend"
      env:
        SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONARQUBE_HOST }}
